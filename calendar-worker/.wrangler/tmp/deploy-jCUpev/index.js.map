{
  "version": 3,
  "sources": ["../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/utils/stream.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../worker/middleware/cors.ts", "../../../worker/middleware/error-handler.ts", "../../../worker/utils/helpers.ts", "../../../worker/services/database-service.ts", "../../../worker/utils/constants.ts", "../../../worker/routes/events.ts", "../../../worker/services/ai-service.ts", "../../../worker/routes/echo.ts", "../../../worker/services/weather-service.ts", "../../../worker/routes/weather.ts", "../../../worker/routes/ics.ts", "../../../worker/routes/seed.ts", "../../../worker/services/asset-service.ts", "../../../worker/index.ts"],
  "sourceRoot": "C:\\Users\\prabh\\OneDrive\\Documents\\GitHub\\infflow_calendar\\calendar-worker\\.wrangler\\tmp\\deploy-jCUpev",
  "sourcesContent": ["// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    if (!patternCache[label]) {\n      if (match[2]) {\n        patternCache[label] = [label, match[1], new RegExp(\"^\" + match[2] + \"$\")];\n      } else {\n        patternCache[label] = [label, match[1], true];\n      }\n    }\n    return patternCache[label];\n  }\n  return null;\n};\nvar getPath = (request) => {\n  const match = request.url.match(/^https?:\\/\\/[^/]+(\\/[^?]*)/);\n  return match ? match[1] : \"\";\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result[result.length - 1] === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (...paths) => {\n  let p = \"\";\n  let endsWithSlash = false;\n  for (let path of paths) {\n    if (p[p.length - 1] === \"/\") {\n      p = p.slice(0, -1);\n      endsWithSlash = true;\n    }\n    if (path[0] !== \"/\") {\n      path = `/${path}`;\n    }\n    if (path === \"/\" && endsWithSlash) {\n      p = `${p}/`;\n    } else if (path !== \"/\") {\n      p = `${p}${path}`;\n    }\n    if (path === \"/\" && p === \"\") {\n      p = \"/\";\n    }\n  }\n  return p;\n};\nvar checkOptionalParameter = (path) => {\n  if (!path.match(/\\:.+\\?$/)) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return /%/.test(value) ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ?? (encoded = /[%+]/.test(url));\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ?? (results[name] = value);\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_ } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0; i < signatureBinStr.length; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch (e) {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  const pairs = cookie.trim().split(\";\");\n  return pairs.reduce((parsedCookie, pairStr) => {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      return parsedCookie;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      return parsedCookie;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\n    }\n    return parsedCookie;\n  }, {});\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    cookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n  }\n  if (opt.domain) {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite}`;\n  }\n  if (opt.partitioned) {\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt = {}) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer) => {\n  let str = \"\";\n  const callbacks = [];\n  for (let i = buffer.length - 1; ; i--) {\n    str += buffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = await buffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  stringBufferToString\n};\n", "// src/utils/stream.ts\nvar StreamingApi = class {\n  constructor(writable, _readable) {\n    this.abortSubscribers = [];\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n    const reader = _readable.getReader();\n    this.responseReadable = new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        done ? controller.close() : controller.enqueue(value);\n      },\n      cancel: () => {\n        this.abortSubscribers.forEach((subscriber) => subscriber());\n      }\n    });\n  }\n  async write(input) {\n    try {\n      if (typeof input === \"string\") {\n        input = this.encoder.encode(input);\n      }\n      await this.writer.write(input);\n    } catch (e) {\n    }\n    return this;\n  }\n  async writeln(input) {\n    await this.write(input + \"\\n\");\n    return this;\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  async close() {\n    try {\n      await this.writer.close();\n    } catch (e) {\n    }\n  }\n  async pipe(body) {\n    this.writer.releaseLock();\n    await body.pipeTo(this.writable, { preventClose: true });\n    this.writer = this.writable.getWriter();\n  }\n  async onAbort(listener) {\n    this.abortSubscribers.push(listener);\n  }\n};\nexport {\n  StreamingApi\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/context.ts\nimport { serialize } from \"./utils/cookie.js\";\nimport { resolveCallback, HtmlEscapedCallbackPhase } from \"./utils/html.js\";\nimport { StreamingApi } from \"./utils/stream.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  Object.entries(map).forEach(([key, value]) => headers.set(key, value));\n  return headers;\n};\nvar _status, _executionCtx, _headers, _preparedHeaders, _res, _isFresh;\nvar Context = class {\n  constructor(req, options) {\n    this.env = {};\n    this._var = {};\n    this.finalized = false;\n    this.error = void 0;\n    __privateAdd(this, _status, 200);\n    __privateAdd(this, _executionCtx, void 0);\n    __privateAdd(this, _headers, void 0);\n    __privateAdd(this, _preparedHeaders, void 0);\n    __privateAdd(this, _res, void 0);\n    __privateAdd(this, _isFresh, true);\n    this.renderer = (content) => this.html(content);\n    this.notFoundHandler = () => new Response();\n    this.render = (...args) => this.renderer(...args);\n    this.setRenderer = (renderer) => {\n      this.renderer = renderer;\n    };\n    this.header = (name, value, options) => {\n      if (value === void 0) {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).delete(name);\n        } else if (__privateGet(this, _preparedHeaders)) {\n          delete __privateGet(this, _preparedHeaders)[name.toLocaleLowerCase()];\n        }\n        if (this.finalized) {\n          this.res.headers.delete(name);\n        }\n        return;\n      }\n      if (options?.append) {\n        if (!__privateGet(this, _headers)) {\n          __privateSet(this, _isFresh, false);\n          __privateSet(this, _headers, new Headers(__privateGet(this, _preparedHeaders)));\n          __privateSet(this, _preparedHeaders, {});\n        }\n        __privateGet(this, _headers).append(name, value);\n      } else {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).set(name, value);\n        } else {\n          __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n          __privateGet(this, _preparedHeaders)[name.toLowerCase()] = value;\n        }\n      }\n      if (this.finalized) {\n        if (options?.append) {\n          this.res.headers.append(name, value);\n        } else {\n          this.res.headers.set(name, value);\n        }\n      }\n    };\n    this.status = (status) => {\n      __privateSet(this, _isFresh, false);\n      __privateSet(this, _status, status);\n    };\n    this.set = (key, value) => {\n      this._var ?? (this._var = {});\n      this._var[key] = value;\n    };\n    this.get = (key) => {\n      return this._var ? this._var[key] : void 0;\n    };\n    this.newResponse = (data, arg, headers) => {\n      if (__privateGet(this, _isFresh) && !headers && !arg && __privateGet(this, _status) === 200) {\n        return new Response(data, {\n          headers: __privateGet(this, _preparedHeaders)\n        });\n      }\n      if (arg && typeof arg !== \"number\") {\n        const headers2 = setHeaders(new Headers(arg.headers), __privateGet(this, _preparedHeaders));\n        return new Response(data, {\n          headers: headers2,\n          status: arg.status\n        });\n      }\n      const status = typeof arg === \"number\" ? arg : __privateGet(this, _status);\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _headers) ?? __privateSet(this, _headers, new Headers());\n      setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n      if (__privateGet(this, _res)) {\n        __privateGet(this, _res).headers.forEach((v, k) => {\n          __privateGet(this, _headers)?.set(k, v);\n        });\n        setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n      }\n      headers ?? (headers = {});\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          __privateGet(this, _headers).set(k, v);\n        } else {\n          __privateGet(this, _headers).delete(k);\n          for (const v2 of v) {\n            __privateGet(this, _headers).append(k, v2);\n          }\n        }\n      }\n      return new Response(data, {\n        status,\n        headers: __privateGet(this, _headers)\n      });\n    };\n    this.body = (data, arg, headers) => {\n      return typeof arg === \"number\" ? this.newResponse(data, arg, headers) : this.newResponse(data, arg);\n    };\n    this.text = (text, arg, headers) => {\n      if (!__privateGet(this, _preparedHeaders)) {\n        if (__privateGet(this, _isFresh) && !headers && !arg) {\n          return new Response(text);\n        }\n        __privateSet(this, _preparedHeaders, {});\n      }\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = TEXT_PLAIN;\n      return typeof arg === \"number\" ? this.newResponse(text, arg, headers) : this.newResponse(text, arg);\n    };\n    this.json = (object, arg, headers) => {\n      const body = JSON.stringify(object);\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"application/json; charset=UTF-8\";\n      return typeof arg === \"number\" ? this.newResponse(body, arg, headers) : this.newResponse(body, arg);\n    };\n    this.jsonT = (object, arg, headers) => {\n      return this.json(object, arg, headers);\n    };\n    this.html = (html, arg, headers) => {\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"text/html; charset=UTF-8\";\n      if (typeof html === \"object\") {\n        if (!(html instanceof Promise)) {\n          html = html.toString();\n        }\n        if (html instanceof Promise) {\n          return html.then((html2) => resolveCallback(html2, HtmlEscapedCallbackPhase.Stringify, false, {})).then((html2) => {\n            return typeof arg === \"number\" ? this.newResponse(html2, arg, headers) : this.newResponse(html2, arg);\n          });\n        }\n      }\n      return typeof arg === \"number\" ? this.newResponse(html, arg, headers) : this.newResponse(html, arg);\n    };\n    this.redirect = (location, status = 302) => {\n      __privateGet(this, _headers) ?? __privateSet(this, _headers, new Headers());\n      __privateGet(this, _headers).set(\"Location\", location);\n      return this.newResponse(null, status);\n    };\n    this.streamText = (cb, arg, headers) => {\n      headers ?? (headers = {});\n      this.header(\"content-type\", TEXT_PLAIN);\n      this.header(\"x-content-type-options\", \"nosniff\");\n      this.header(\"transfer-encoding\", \"chunked\");\n      return this.stream(cb, arg, headers);\n    };\n    this.stream = (cb, arg, headers) => {\n      const { readable, writable } = new TransformStream();\n      const stream = new StreamingApi(writable, readable);\n      cb(stream).finally(() => stream.close());\n      return typeof arg === \"number\" ? this.newResponse(stream.responseReadable, arg, headers) : this.newResponse(stream.responseReadable, arg);\n    };\n    this.cookie = (name, value, opt) => {\n      const cookie = serialize(name, value, opt);\n      this.header(\"set-cookie\", cookie, { append: true });\n    };\n    this.notFound = () => {\n      return this.notFoundHandler(this);\n    };\n    this.req = req;\n    if (options) {\n      __privateSet(this, _executionCtx, options.executionCtx);\n      this.env = options.env;\n      if (options.notFoundHandler) {\n        this.notFoundHandler = options.notFoundHandler;\n      }\n    }\n  }\n  get event() {\n    if (__privateGet(this, _executionCtx) && \"respondWith\" in __privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (__privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    __privateSet(this, _isFresh, false);\n    return __privateGet(this, _res) || __privateSet(this, _res, new Response(\"404 Not Found\", { status: 404 }));\n  }\n  set res(_res2) {\n    __privateSet(this, _isFresh, false);\n    if (__privateGet(this, _res) && _res2) {\n      __privateGet(this, _res).headers.delete(\"content-type\");\n      for (const [k, v] of __privateGet(this, _res).headers.entries()) {\n        if (k === \"set-cookie\") {\n          const cookies = __privateGet(this, _res).headers.getSetCookie();\n          _res2.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res2.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res2.headers.set(k, v);\n        }\n      }\n    }\n    __privateSet(this, _res, _res2);\n    this.finalized = true;\n  }\n  get var() {\n    return { ...this._var };\n  }\n  get runtime() {\n    const global = globalThis;\n    if (global?.Deno !== void 0) {\n      return \"deno\";\n    }\n    if (global?.Bun !== void 0) {\n      return \"bun\";\n    }\n    if (typeof global?.WebSocketPair === \"function\") {\n      return \"workerd\";\n    }\n    if (typeof global?.EdgeRuntime === \"string\") {\n      return \"edge-light\";\n    }\n    if (global?.fastly !== void 0) {\n      return \"fastly\";\n    }\n    if (global?.__lagon__ !== void 0) {\n      return \"lagon\";\n    }\n    if (global?.process?.release?.name === \"node\") {\n      return \"node\";\n    }\n    return \"other\";\n  }\n};\n_status = new WeakMap();\n_executionCtx = new WeakMap();\n_headers = new WeakMap();\n_preparedHeaders = new WeakMap();\n_res = new WeakMap();\n_isFresh = new WeakMap();\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/compose.ts\nimport { Context } from \"./context.js\";\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        if (context instanceof Context) {\n          context.req.routeIndex = i;\n        }\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (!handler) {\n        if (context instanceof Context && context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      } else {\n        try {\n          res = await handler(context, () => {\n            return dispatch(i + 1);\n          });\n        } catch (err) {\n          if (err instanceof Error && context instanceof Context && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  constructor(status = 500, options) {\n    super(options?.message);\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      return this.res;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/body.ts\nvar parseBody = async (request, options = { all: false }) => {\n  const contentType = request.headers.get(\"Content-Type\");\n  if (isFormDataContent(contentType)) {\n    return parseFormData(request, options);\n  }\n  return {};\n};\nfunction isFormDataContent(contentType) {\n  if (contentType === null) {\n    return false;\n  }\n  return contentType.startsWith(\"multipart/form-data\") || contentType.startsWith(\"application/x-www-form-urlencoded\");\n}\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = {};\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] && isArrayField(form[key])) {\n    appendToExistingArray(form[key], value);\n  } else if (form[key]) {\n    convertToNewArray(form, key, value);\n  } else {\n    form[key] = value;\n  }\n};\nfunction isArrayField(field) {\n  return Array.isArray(field);\n}\nvar appendToExistingArray = (arr, value) => {\n  arr.push(value);\n};\nvar convertToNewArray = (form, key, value) => {\n  form[key] = [form[key], value];\n};\nexport {\n  parseBody\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { parse } from \"./utils/cookie.js\";\nimport { getQueryParam, getQueryParams, decodeURIComponent_ } from \"./utils/url.js\";\nvar _validatedData, _matchResult;\nvar HonoRequest = class {\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    __privateAdd(this, _validatedData, void 0);\n    __privateAdd(this, _matchResult, void 0);\n    this.routeIndex = 0;\n    this.bodyCache = {};\n    this.cachedBody = (key) => {\n      const { bodyCache, raw } = this;\n      const cachedBody = bodyCache[key];\n      if (cachedBody) {\n        return cachedBody;\n      }\n      if (bodyCache.arrayBuffer) {\n        return (async () => {\n          return await new Response(bodyCache.arrayBuffer)[key]();\n        })();\n      }\n      return bodyCache[key] = raw[key]();\n    };\n    this.raw = request;\n    this.path = path;\n    __privateSet(this, _matchResult, matchResult);\n    __privateSet(this, _validatedData, {});\n  }\n  param(key) {\n    return key ? this.getDecodedParam(key) : this.getAllDecodedParams();\n  }\n  getDecodedParam(key) {\n    const paramKey = __privateGet(this, _matchResult)[0][this.routeIndex][1][key];\n    const param = this.getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? decodeURIComponent_(param) : param : void 0;\n  }\n  getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(__privateGet(this, _matchResult)[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.getParamValue(__privateGet(this, _matchResult)[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? decodeURIComponent_(value) : value;\n      }\n    }\n    return decoded;\n  }\n  getParamValue(paramKey) {\n    return __privateGet(this, _matchResult)[1] ? __privateGet(this, _matchResult)[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name.toLowerCase()) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  cookie(key) {\n    const cookie = this.raw.headers.get(\"Cookie\");\n    if (!cookie) {\n      return;\n    }\n    const obj = parse(cookie);\n    if (key) {\n      const value = obj[key];\n      return value;\n    } else {\n      return obj;\n    }\n  }\n  async parseBody(options) {\n    if (this.bodyCache.parsedBody) {\n      return this.bodyCache.parsedBody;\n    }\n    const parsedBody = await parseBody(this, options);\n    this.bodyCache.parsedBody = parsedBody;\n    return parsedBody;\n  }\n  json() {\n    return this.cachedBody(\"json\");\n  }\n  text() {\n    return this.cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.cachedBody(\"blob\");\n  }\n  formData() {\n    return this.cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    __privateGet(this, _validatedData)[target] = data;\n  }\n  valid(target) {\n    return __privateGet(this, _validatedData)[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n  get headers() {\n    return this.raw.headers;\n  }\n  get body() {\n    return this.raw.body;\n  }\n  get bodyUsed() {\n    return this.raw.bodyUsed;\n  }\n  get integrity() {\n    return this.raw.integrity;\n  }\n  get keepalive() {\n    return this.raw.keepalive;\n  }\n  get referrer() {\n    return this.raw.referrer;\n  }\n  get signal() {\n    return this.raw.signal;\n  }\n};\n_validatedData = new WeakMap();\n_matchResult = new WeakMap();\nexport {\n  HonoRequest\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { HTTPException } from \"./http-exception.js\";\nimport { HonoRequest } from \"./request.js\";\nimport { METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE, METHODS } from \"./router.js\";\nimport { getPath, getPathNoStrict, getQueryStrings, mergePath } from \"./utils/url.js\";\nvar COMPOSED_HANDLER = Symbol(\"composedHandler\");\nfunction defineDynamicClass() {\n  return class {\n  };\n}\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (err instanceof HTTPException) {\n    return err.getResponse();\n  }\n  console.error(err);\n  const message = \"Internal Server Error\";\n  return c.text(message, 500);\n};\nvar _path;\nvar _Hono = class extends defineDynamicClass() {\n  constructor(options = {}) {\n    super();\n    this._basePath = \"/\";\n    __privateAdd(this, _path, \"/\");\n    this.routes = [];\n    this.notFoundHandler = notFoundHandler;\n    this.errorHandler = errorHandler;\n    this.onError = (handler) => {\n      this.errorHandler = handler;\n      return this;\n    };\n    this.notFound = (handler) => {\n      this.notFoundHandler = handler;\n      return this;\n    };\n    this.head = () => {\n      console.warn(\"`app.head()` is no longer used. `app.get()` implicitly handles the HEAD method.\");\n      return this;\n    };\n    this.handleEvent = (event) => {\n      return this.dispatch(event.request, event, void 0, event.request.method);\n    };\n    this.fetch = (request, Env, executionCtx) => {\n      return this.dispatch(request, executionCtx, Env, request.method);\n    };\n    this.request = (input, requestInit, Env, executionCtx) => {\n      if (input instanceof Request) {\n        if (requestInit !== void 0) {\n          input = new Request(input, requestInit);\n        }\n        return this.fetch(input, Env, executionCtx);\n      }\n      input = input.toString();\n      const path = /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`;\n      const req = new Request(path, requestInit);\n      return this.fetch(req, Env, executionCtx);\n    };\n    this.fire = () => {\n      addEventListener(\"fetch\", (event) => {\n        event.respondWith(this.dispatch(event.request, event, void 0, event.request.method));\n      });\n    };\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.map((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          __privateSet(this, _path, args1);\n        } else {\n          this.addRoute(method, __privateGet(this, _path), args1);\n        }\n        args.map((handler) => {\n          if (typeof handler !== \"string\") {\n            this.addRoute(method, __privateGet(this, _path), handler);\n          }\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      if (!method) {\n        return this;\n      }\n      __privateSet(this, _path, path);\n      for (const m of [method].flat()) {\n        handlers.map((handler) => {\n          this.addRoute(m.toUpperCase(), __privateGet(this, _path), handler);\n        });\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        __privateSet(this, _path, arg1);\n      } else {\n        handlers.unshift(arg1);\n      }\n      handlers.map((handler) => {\n        this.addRoute(METHOD_NAME_ALL, __privateGet(this, _path), handler);\n      });\n      return this;\n    };\n    const strict = options.strict ?? true;\n    delete options.strict;\n    Object.assign(this, options);\n    this.getPath = strict ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  clone() {\n    const clone = new _Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  route(path, app) {\n    const subApp = this.basePath(path);\n    if (!app) {\n      return subApp;\n    }\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  showRoutes() {\n    const length = 8;\n    this.routes.map((route) => {\n      console.log(\n        `\\x1B[32m${route.method}\\x1B[0m ${\" \".repeat(length - route.method.length)} ${route.path}`\n      );\n    });\n  }\n  mount(path, applicationHandler, optionHandler) {\n    const mergedPath = mergePath(this._basePath, path);\n    const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n    const handler = async (c, next) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      const options = optionHandler ? optionHandler(c) : [c.env, executionContext];\n      const optionsArray = Array.isArray(options) ? options : [options];\n      const queryStrings = getQueryStrings(c.req.url);\n      const res = await applicationHandler(\n        new Request(\n          new URL((c.req.path.slice(pathPrefixLength) || \"/\") + queryStrings, c.req.url),\n          c.req.raw\n        ),\n        ...optionsArray\n      );\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  get routerName() {\n    this.matchRoute(\"GET\", \"/\");\n    return this.router.name;\n  }\n  addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  matchRoute(method, path) {\n    return this.router.match(method, path);\n  }\n  handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.matchRoute(method, path);\n    const c = new Context(new HonoRequest(request, path, matchResult), {\n      env,\n      executionCtx,\n      notFoundHandler: this.notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.notFoundHandler(c))\n      ).catch((err) => this.handleError(err, c)) : res;\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. You may forget returning Response object or `await next()`\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n    })();\n  }\n};\nvar Hono = _Hono;\n_path = new WeakMap();\nexport {\n  COMPOSED_HANDLER,\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  constructor() {\n    this.children = {};\n  }\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.varIndex]);\n      }\n    } else {\n      node = this.children[token];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.children[k];\n      return (typeof c.varIndex === \"number\" ? `(${k})@${c.varIndex}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.index === \"number\") {\n      strList.unshift(`#${this.index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  constructor() {\n    this.context = { varIndex: 0 };\n    this.root = new Node();\n  }\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.root.insert(tokens, index, paramAssoc, this.context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (typeof handlerIndex !== \"undefined\") {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (typeof paramIndex !== \"undefined\") {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  METHOD_NAME_ALL,\n  METHODS,\n  UnsupportedPathError,\n  MESSAGE_MATCHER_IS_ALREADY_BUILT\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar methodNames = [METHOD_NAME_ALL, ...METHODS].map((method) => method.toUpperCase());\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], {}];\nvar wildcardRegExpCache = {};\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ?? (wildcardRegExpCache[path] = new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(/\\/\\*/, \"(?:|/.*)\")}$`\n  ));\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = {};\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = {};\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, {}]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = {};\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  constructor() {\n    this.name = \"RegExpRouter\";\n    this.middleware = { [METHOD_NAME_ALL]: {} };\n    this.routes = { [METHOD_NAME_ALL]: {} };\n  }\n  add(method, path, handler) {\n    var _a;\n    const { middleware, routes } = this;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (methodNames.indexOf(method) === -1) {\n      methodNames.push(method);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = {};\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          var _a2;\n          (_a2 = middleware[m])[path] || (_a2[path] = findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n        });\n      } else {\n        (_a = middleware[method])[path] || (_a[path] = findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        var _a2;\n        if (method === METHOD_NAME_ALL || method === m) {\n          (_a2 = routes[m])[path2] || (_a2[path2] = [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ]);\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  buildAllMatchers() {\n    const matchers = {};\n    methodNames.forEach((method) => {\n      matchers[method] = this.buildMatcher(method) || matchers[METHOD_NAME_ALL];\n    });\n    this.middleware = this.routes = void 0;\n    return matchers;\n  }\n  buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.middleware, this.routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute || (hasOwnRoute = true);\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { UnsupportedPathError, MESSAGE_MATCHER_IS_ALREADY_BUILT } from \"../../router.js\";\nvar SmartRouter = class {\n  constructor(init) {\n    this.name = \"SmartRouter\";\n    this.routers = [];\n    this.routes = [];\n    Object.assign(this, init);\n  }\n  add(method, path, handler) {\n    if (!this.routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const { routers, routes } = this;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        routes.forEach((args) => {\n          router.add(...args);\n        });\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.routers = [router];\n      this.routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.routes || this.routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { splitPath, splitRoutingPath, getPattern } from \"../../utils/url.js\";\nvar Node = class {\n  constructor(method, handler, children) {\n    this.order = 0;\n    this.params = {};\n    this.children = children || {};\n    this.methods = [];\n    this.name = \"\";\n    if (method && handler) {\n      const m = {};\n      m[method] = { handler, possibleKeys: [], score: 0, name: this.name };\n      this.methods = [m];\n    }\n    this.patterns = [];\n  }\n  insert(method, path, handler) {\n    this.name = `${method} ${path}`;\n    this.order = ++this.order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    const parentPatterns = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      if (Object.keys(curNode.children).includes(p)) {\n        parentPatterns.push(...curNode.patterns);\n        curNode = curNode.children[p];\n        const pattern2 = getPattern(p);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      curNode.children[p] = new Node();\n      const pattern = getPattern(p);\n      if (pattern) {\n        curNode.patterns.push(pattern);\n        parentPatterns.push(...curNode.patterns);\n        possibleKeys.push(pattern[1]);\n      }\n      parentPatterns.push(...curNode.patterns);\n      curNode = curNode.children[p];\n    }\n    if (!curNode.methods.length) {\n      curNode.methods = [];\n    }\n    const m = {};\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      name: this.name,\n      score: this.order\n    };\n    m[method] = handlerSet;\n    curNode.methods.push(m);\n    return curNode;\n  }\n  gHSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.methods.length; i < len; i++) {\n      const m = node.methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = {};\n        handlerSet.possibleKeys.forEach((key) => {\n          const processed = processedSet[handlerSet.name];\n          handlerSet.params[key] = params[key] && !processed ? params[key] : nodeParams[key] ?? params[key];\n          processedSet[handlerSet.name] = true;\n        });\n        handlerSets.push(handlerSet);\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.params = {};\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.children[part];\n        if (nextNode) {\n          nextNode.params = node.params;\n          if (isLast === true) {\n            if (nextNode.children[\"*\"]) {\n              handlerSets.push(...this.gHSets(nextNode.children[\"*\"], method, node.params, {}));\n            }\n            handlerSets.push(...this.gHSets(nextNode, method, node.params, {}));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.patterns.length; k < len3; k++) {\n          const pattern = node.patterns[k];\n          const params = { ...node.params };\n          if (pattern === \"*\") {\n            const astNode = node.children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.gHSets(astNode, method, node.params, {}));\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp && matcher.test(restPathString)) {\n            params[name] = restPathString;\n            handlerSets.push(...this.gHSets(child, method, node.params, params));\n            continue;\n          }\n          if (matcher === true || matcher instanceof RegExp && matcher.test(part)) {\n            if (typeof key === \"string\") {\n              params[name] = part;\n              if (isLast === true) {\n                handlerSets.push(...this.gHSets(child, method, params, node.params));\n                if (child.children[\"*\"]) {\n                  handlerSets.push(...this.gHSets(child.children[\"*\"], method, params, node.params));\n                }\n              } else {\n                child.params = params;\n                tempNodes.push(child);\n              }\n            }\n          }\n        }\n      }\n      curNodes = tempNodes;\n    }\n    const results = handlerSets.sort((a, b) => {\n      return a.score - b.score;\n    });\n    return [results.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  constructor() {\n    this.name = \"TrieRouter\";\n    this.node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (const p of results) {\n        this.node.insert(method, p, handler);\n      }\n      return;\n    }\n    this.node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      return () => optsOrigin;\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : optsOrigin[0];\n    }\n  })(opts.origin);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\");\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      set(\"Vary\", \"Origin\");\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      if (opts.allowMethods?.length) {\n        set(\"Access-Control-Allow-Methods\", opts.allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: c.res.statusText\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import { cors } from 'hono/cors';\n\nexport const corsMiddleware = cors({\n  origin: '*',\n  allowMethods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'],\n  allowHeaders: ['Content-Type', 'Authorization'],\n  exposeHeaders: ['Content-Length', 'X-Requested-With'],\n  maxAge: 86400,\n});\n", "import { Context, Next } from 'hono';\n\nexport const errorHandler = async (c: Context, next: Next) => {\n  try {\n    await next();\n  } catch (error) {\n    console.error('Unhandled error:', error);\n    return c.json({ \n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    }, 500);\n  }\n};\n\nexport const createErrorResponse = (c: Context, message: string, status: number = 500) => {\n  console.error(`Error: ${message}`);\n  return c.json({ error: message }, status);\n};\n\nexport const createSuccessResponse = (c: Context, data: any, status: number = 200) => {\n  return c.json(data, status);\n};\n", "export const formatDateForICS = (dateString: string): string => {\n  return dateString.replace(/[-:]/g, '').split('.')[0];\n};\n\nexport const escapeICSField = (field: string): string => {\n  return field.replace(/\\n/g, '\\\\n');\n};\n\nexport const generateUUID = (): string => {\n  return crypto.randomUUID();\n};\n\nexport const getCurrentTimestamp = (): string => {\n  return new Date().toISOString();\n};\n\nexport const validateDateRange = (from: string, to: string): boolean => {\n  const fromMs = Date.parse(from);\n  const toMs = Date.parse(to);\n  return !isNaN(fromMs) && !isNaN(toMs);\n};\n", "import { Event, CreateEventRequest, UpdateEventRequest } from '../types';\r\nimport { generateUUID, getCurrentTimestamp } from '../utils/helpers';\r\n\r\nexport class DatabaseService {\r\n  constructor(private db: any) {}\r\n\r\n  async getEvents(calendarId: string, from: string, to: string): Promise<Event[]> {\r\n    const result = await this.db.prepare(`\r\n      SELECT * FROM events \r\n      WHERE calendar_id = ? AND start >= ? AND start <= ?\r\n      ORDER BY start ASC\r\n    `).bind(calendarId, from, to).all();\r\n    \r\n    return (result.results as Event[]) || [];\r\n  }\r\n\r\n  async createEvent(eventData: CreateEventRequest): Promise<Event> {\r\n    const id = generateUUID();\r\n    const now = getCurrentTimestamp();\r\n\r\n    await this.db.prepare(`\r\n      INSERT INTO events (id, calendar_id, title, description, start, end, tz, eventType, location, type, created_at, updated_at)\r\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'regular', ?, ?)\r\n    `).bind(\r\n      id, \r\n      eventData.calendar_id, \r\n      eventData.title, \r\n      eventData.description || '', \r\n      eventData.start, \r\n      eventData.end, \r\n      eventData.tz, \r\n      eventData.eventType || 'other', \r\n      eventData.location || '', \r\n      now, \r\n      now\r\n    ).run();\r\n\r\n    return {\r\n      id,\r\n      calendar_id: eventData.calendar_id,\r\n      title: eventData.title,\r\n      description: eventData.description,\r\n      start: eventData.start,\r\n      end: eventData.end,\r\n      tz: eventData.tz,\r\n      eventType: eventData.eventType || 'other',\r\n      location: eventData.location,\r\n      type: 'regular',\r\n      created_at: now,\r\n      updated_at: now\r\n    };\r\n  }\r\n\r\n  async updateEvent(id: string, updateData: UpdateEventRequest): Promise<Event | null> {\r\n    const updateFields: string[] = [];\r\n    const values: any[] = [];\r\n\r\n    if (updateData.title !== undefined) {\r\n      updateFields.push('title = ?');\r\n      values.push(updateData.title);\r\n    }\r\n    if (updateData.description !== undefined) {\r\n      updateFields.push('description = ?');\r\n      values.push(updateData.description);\r\n    }\r\n    if (updateData.start !== undefined) {\r\n      updateFields.push('start = ?');\r\n      values.push(updateData.start);\r\n    }\r\n    if (updateData.end !== undefined) {\r\n      updateFields.push('end = ?');\r\n      values.push(updateData.end);\r\n    }\r\n    if (updateData.tz !== undefined) {\r\n      updateFields.push('tz = ?');\r\n      values.push(updateData.tz);\r\n    }\r\n    if (updateData.eventType !== undefined) {\r\n      updateFields.push('eventType = ?');\r\n      values.push(updateData.eventType);\r\n    }\r\n    if (updateData.location !== undefined) {\r\n      updateFields.push('location = ?');\r\n      values.push(updateData.location);\r\n    }\r\n\r\n    if (updateFields.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    updateFields.push('updated_at = ?');\r\n    values.push(getCurrentTimestamp());\r\n    values.push(id);\r\n\r\n    await this.db.prepare(`\r\n      UPDATE events \r\n      SET ${updateFields.join(', ')}\r\n      WHERE id = ?\r\n    `).bind(...values).run();\r\n\r\n    return this.getEventById(id);\r\n  }\r\n\r\n  async deleteEvent(id: string): Promise<boolean> {\r\n    const result = await this.db.prepare('DELETE FROM events WHERE id = ?').bind(id).run();\r\n    return result.changes > 0;\r\n  }\r\n\r\n  async getEventById(id: string): Promise<Event | null> {\r\n    const result = await this.db.prepare('SELECT * FROM events WHERE id = ?').bind(id).first();\r\n    return (result as Event) || null;\r\n  }\r\n\r\n  async createEchoEvents(parentEvent: Event, followups: any[], mermaidCode: string, userId: string): Promise<any[]> {\r\n    const createdEvents = [];\r\n    \r\n    for (const followup of followups) {\r\n      const followupId = generateUUID();\r\n      const now = getCurrentTimestamp();\r\n      \r\n      await this.db.prepare(`\r\n        INSERT INTO events (id, calendar_id, title, description, start, end, tz, \r\n                          type, flowchart, parent_event_id, user_id, eventType, created_at, updated_at)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?, 'echo', ?, ?, ?, 'other', ?, ?)\r\n      `).bind(\r\n        followupId, \r\n        parentEvent.calendar_id, \r\n        followup.title, \r\n        followup.description,\r\n        followup.start, \r\n        followup.end, \r\n        parentEvent.tz, \r\n        mermaidCode, \r\n        parentEvent.id, \r\n        userId, \r\n        now, \r\n        now\r\n      ).run();\r\n      \r\n      createdEvents.push({ id: followupId, ...followup });\r\n    }\r\n\r\n    return createdEvents;\r\n  }\r\n\r\n  async updateEventFlowchart(eventId: string, flowchart: string, echoEventIds: string[]): Promise<void> {\r\n    const now = getCurrentTimestamp();\r\n    await this.db.prepare(`\r\n      UPDATE events \r\n      SET flowchart = ?, echo_event_ids = ?, updated_at = ?\r\n      WHERE id = ?\r\n    `).bind(flowchart, JSON.stringify(echoEventIds), now, eventId).run();\r\n  }\r\n\r\n  async resetEchoEvents(eventId: string): Promise<void> {\r\n    const now = getCurrentTimestamp();\r\n    \r\n    // Clear flowchart and echo relationships\r\n    await this.db.prepare(`\r\n      UPDATE events \r\n      SET flowchart = NULL, echo_event_ids = NULL, updated_at = ?\r\n      WHERE id = ?\r\n    `).bind(now, eventId).run();\r\n    \r\n    // Clear child echo events\r\n    await this.db.prepare(`\r\n      UPDATE events \r\n      SET flowchart = NULL, parent_event_id = NULL, updated_at = ?\r\n      WHERE parent_event_id = ?\r\n    `).bind(now, eventId).run();\r\n  }\r\n\r\n  async getUserEvents(userId: string): Promise<(Event & { calendar_name: string })[]> {\r\n    const result = await this.db.prepare(`\r\n      SELECT e.*, c.name as calendar_name\r\n      FROM events e\r\n      JOIN calendars c ON e.calendar_id = c.id\r\n      WHERE c.user_id = ?\r\n      ORDER BY e.start ASC\r\n    `).bind(userId).all();\r\n    \r\n    return (result.results as (Event & { calendar_name: string })[]) || [];\r\n  }\r\n\r\n  async seedDemoData(userId: string, calendarId: string): Promise<void> {\r\n    // Check if user exists\r\n    let user = await this.db.prepare('SELECT * FROM users WHERE id = ?').bind(userId).first();\r\n    \r\n    if (!user) {\r\n      await this.db.prepare('INSERT INTO users (id, email) VALUES (?, ?)').bind(userId, `${userId}@example.com`).run();\r\n    }\r\n\r\n    // Check if calendar exists\r\n    let calendar = await this.db.prepare('SELECT * FROM calendars WHERE user_id = ?').bind(userId).first();\r\n    \r\n    if (!calendar) {\r\n      await this.db.prepare('INSERT INTO calendars (id, user_id, name) VALUES (?, ?, ?)').bind(calendarId, userId, 'My Calendar').run();\r\n    }\r\n\r\n    // Check if events exist\r\n    const eventCount = await this.db.prepare('SELECT COUNT(*) as count FROM events WHERE calendar_id = ?').bind(calendarId).first();\r\n    \r\n    if (eventCount && (eventCount as { count: number }).count === 0) {\r\n      await this.createDemoEvents(calendarId);\r\n    }\r\n  }\r\n\r\n  private async createDemoEvents(calendarId: string): Promise<void> {\r\n    const now = new Date();\r\n    const tomorrow = new Date(now.getTime() + 24 * 60 * 60 * 1000);\r\n    const dayAfter = new Date(tomorrow.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const demoEvents = [\r\n      {\r\n        id: generateUUID(),\r\n        calendar_id: calendarId,\r\n        title: 'doctor appointment',\r\n        description: 'Annual checkup and consultation',\r\n        start: new Date(tomorrow.getTime() + 14 * 60 * 60 * 1000).toISOString(),\r\n        end: new Date(tomorrow.getTime() + 15 * 60 * 60 * 1000).toISOString(),\r\n        tz: 'America/New_York',\r\n        eventType: 'other',\r\n        location: 'Medical Center'\r\n      },\r\n      {\r\n        id: generateUUID(),\r\n        calendar_id: calendarId,\r\n        title: 'Team Meeting',\r\n        description: 'Weekly team sync',\r\n        start: new Date(tomorrow.getTime() + 9 * 60 * 60 * 1000).toISOString(),\r\n        end: new Date(tomorrow.getTime() + 10 * 60 * 60 * 1000).toISOString(),\r\n        tz: 'America/New_York',\r\n        eventType: 'work'\r\n      },\r\n      {\r\n        id: generateUUID(),\r\n        calendar_id: calendarId,\r\n        title: 'Lunch with Client',\r\n        description: 'Discuss project requirements',\r\n        start: new Date(tomorrow.getTime() + 12 * 60 * 60 * 1000).toISOString(),\r\n        end: new Date(tomorrow.getTime() + 13 * 60 * 60 * 1000).toISOString(),\r\n        tz: 'America/New_York',\r\n        eventType: 'work'\r\n      },\r\n      {\r\n        id: generateUUID(),\r\n        calendar_id: calendarId,\r\n        title: 'Product Review',\r\n        description: 'Review new features',\r\n        start: new Date(dayAfter.getTime() + 14 * 60 * 60 * 1000).toISOString(),\r\n        end: new Date(dayAfter.getTime() + 15 * 60 * 60 * 1000).toISOString(),\r\n        tz: 'America/New_York',\r\n        eventType: 'work'\r\n      }\r\n    ];\r\n\r\n    for (const event of demoEvents) {\r\n      await this.db.prepare(`\r\n        INSERT INTO events (id, calendar_id, title, description, start, end, tz, eventType, location, created_at, updated_at)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n      `).bind(event.id, event.calendar_id, event.title, event.description, event.start, event.end, event.tz, event.eventType, event.location || null, now.toISOString(), now.toISOString()).run();\r\n    }\r\n  }\r\n}\r\n", "export const CALENDAR_ID = \"3c414e29-a3c3-4350-a334-5585cb22737a\";\n\nexport const DEFAULT_TIMEZONE = \"America/New_York\";\n\nexport const EVENT_TYPES = {\n  REGULAR: 'regular',\n  ECHO: 'echo',\n  OTHER: 'other'\n} as const;\n\nexport const CACHE_HEADERS = {\n  NO_CACHE: 'no-cache, no-store, must-revalidate',\n  PRAGMA: 'no-cache',\n  EXPIRES: '0'\n} as const;\n", "import { Hono } from 'hono';\r\nimport { DatabaseService } from '../services/database-service';\r\nimport { createErrorResponse, createSuccessResponse } from '../middleware/error-handler';\r\nimport { CALENDAR_ID } from '../utils/constants';\r\nimport { CreateEventRequest, UpdateEventRequest } from '../types';\r\nimport { validateDateRange } from '../utils/helpers';\r\n\r\nexport const eventsRouter = new Hono();\r\n\r\n// GET /api/events\r\neventsRouter.get('/api/events', async (c) => {\r\n  try {\r\n    const calendarId = c.req.query('calendarId') ?? CALENDAR_ID;\r\n    const from = c.req.query('from');\r\n    const to = c.req.query('to');\r\n    \r\n    if (!from || !to) {\r\n      return createErrorResponse(c, 'Missing required parameters: from, to', 400);\r\n    }\r\n\r\n    // Parse dates safely using milliseconds to avoid timezone issues\r\n    if (!validateDateRange(from, to)) {\r\n      return createErrorResponse(c, 'Invalid date format', 400);\r\n    }\r\n\r\n    const dbService = new DatabaseService(c.env.DB);\r\n    const events = await dbService.getEvents(calendarId, from, to);\r\n\r\n    return createSuccessResponse(c, { events });\r\n  } catch (error) {\r\n    console.error('Error fetching events:', error);\r\n    return createErrorResponse(c, 'Failed to fetch events');\r\n  }\r\n});\r\n\r\n// GET /api/events/:id\r\neventsRouter.get('/api/events/:id', async (c) => {\r\n  try {\r\n    const id = c.req.param('id');\r\n    \r\n    if (!id) {\r\n      return createErrorResponse(c, 'Event ID is required', 400);\r\n    }\r\n\r\n    const dbService = new DatabaseService(c.env.DB);\r\n    const event = await dbService.getEventById(id);\r\n    \r\n    if (!event) {\r\n      return createErrorResponse(c, 'Event not found', 404);\r\n    }\r\n\r\n    return createSuccessResponse(c, { event });\r\n  } catch (error) {\r\n    console.error('Error fetching event:', error);\r\n    return createErrorResponse(c, 'Failed to fetch event');\r\n  }\r\n});\r\n\r\n// POST /api/events\r\neventsRouter.post('/api/events', async (c) => {\r\n  try {\r\n    const body: CreateEventRequest = await c.req.json();\r\n    \r\n    if (!body.calendar_id || !body.title || !body.start || !body.end || !body.tz) {\r\n      return createErrorResponse(c, 'Missing required fields', 400);\r\n    }\r\n\r\n    const dbService = new DatabaseService(c.env.DB);\r\n    const event = await dbService.createEvent(body);\r\n\r\n    return createSuccessResponse(c, { event }, 201);\r\n  } catch (error) {\r\n    console.error('Error creating event:', error);\r\n    return createErrorResponse(c, 'Failed to create event');\r\n  }\r\n});\r\n\r\n// PATCH /api/events/:id\r\neventsRouter.patch('/api/events/:id', async (c) => {\r\n  try {\r\n    const id = c.req.param('id');\r\n    const body: UpdateEventRequest = await c.req.json();\r\n    \r\n    if (!id) {\r\n      return createErrorResponse(c, 'Event ID is required', 400);\r\n    }\r\n\r\n    const dbService = new DatabaseService(c.env.DB);\r\n    const event = await dbService.updateEvent(id, body);\r\n    \r\n    if (!event) {\r\n      return createErrorResponse(c, 'Event not found', 404);\r\n    }\r\n\r\n    return createSuccessResponse(c, { event });\r\n  } catch (error) {\r\n    console.error('Error updating event:', error);\r\n    return createErrorResponse(c, 'Failed to update event');\r\n  }\r\n});\r\n\r\n// DELETE /api/events/:id\r\neventsRouter.delete('/api/events/:id', async (c) => {\r\n  try {\r\n    const id = c.req.param('id');\r\n    \r\n    if (!id) {\r\n      return createErrorResponse(c, 'Event ID is required', 400);\r\n    }\r\n\r\n    const dbService = new DatabaseService(c.env.DB);\r\n    const deleted = await dbService.deleteEvent(id);\r\n    \r\n    if (!deleted) {\r\n      return createErrorResponse(c, 'Event not found', 404);\r\n    }\r\n\r\n    return createSuccessResponse(c, { message: 'Event deleted successfully' });\r\n  } catch (error) {\r\n    console.error('Error deleting event:', error);\r\n    return createErrorResponse(c, 'Failed to delete event');\r\n  }\r\n});\r\n", "interface FollowupEvent {\n  title: string;\n  description: string;\n  start: string;\n  end: string;\n}\n\ninterface Event {\n  id: string;\n  title: string;\n  description?: string;\n  start: string;\n  end: string;\n}\n\nexport async function generateFollowupEvents(parentEvent: Event, openaiApiKey: string): Promise<FollowupEvent[]> {\n  try {\n    const prompt = `Generate 2 follow-up events for this calendar event:\nTitle: ${parentEvent.title}\nDescription: ${parentEvent.description || 'No description'}\nDate: ${parentEvent.start}\n\nGenerate realistic follow-up events that would naturally occur after this event. Consider:\n- Project timelines and milestones\n- Follow-up meetings or check-ins\n- Review sessions or evaluations\n- Next steps or continuation activities\n- For medical appointments: follow-up visits, annual checkups, specialist referrals\n- For work events: progress reviews, milestone check-ins, final presentations\n\nFormat as JSON array with exactly 2 events:\n[{\"title\": \"Event Title\", \"description\": \"Brief description\", \"start\": \"ISO_DATE\", \"end\": \"ISO_DATE\"}]`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${openaiApiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4.1',\n        messages: [\n          {\n            role: 'system',\n            content: 'You are an expert personal assistant and event planner. Generate realistic follow-up calendar events based on the context provided. Always return valid JSON.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        max_tokens: 500,\n        temperature: 0.7\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    const content = data.choices[0].message.content;\n    \n    // Parse the JSON response\n    const followups = JSON.parse(content);\n    \n    // Validate and format the followups\n    if (!Array.isArray(followups) || followups.length < 2) {\n      throw new Error('Invalid followup format');\n    }\n\n    // Ensure we have exactly 2 followups with proper dates\n    const formattedFollowups: FollowupEvent[] = followups.slice(0, 2).map((followup, index) => {\n      const baseDate = new Date(parentEvent.start);\n      const daysOffset = index === 0 ? 14 : 365; // 2 weeks and 1 year later\n      \n      const startDate = new Date(baseDate.getTime() + daysOffset * 24 * 60 * 60 * 1000);\n      const endDate = new Date(startDate.getTime() + 60 * 60 * 1000); // 1 hour duration\n      \n      return {\n        title: followup.title || `Follow-up ${index + 1}`,\n        description: followup.description || 'Follow-up event',\n        start: startDate.toISOString(),\n        end: endDate.toISOString()\n      };\n    });\n\n    return formattedFollowups;\n  } catch (error) {\n    console.error('Error generating followups:', error);\n    \n    // Fallback to default followups if AI fails\n    const baseDate = new Date(parentEvent.start);\n    const weekLater = new Date(baseDate.getTime() + 14 * 24 * 60 * 60 * 1000); // 2 weeks later\n    const yearLater = new Date(baseDate.getTime() + 365 * 24 * 60 * 60 * 1000); // 1 year later\n    \n    // Check if it's a medical appointment and provide appropriate fallbacks\n    const isMedical = parentEvent.title.toLowerCase().includes('doctor') || \n                     parentEvent.title.toLowerCase().includes('appointment') ||\n                     parentEvent.title.toLowerCase().includes('checkup') ||\n                     parentEvent.title.toLowerCase().includes('visit');\n    \n    if (isMedical) {\n      return [\n        {\n          title: 'Follow-up Doctor Visit',\n          description: 'Check progress and discuss next steps',\n          start: weekLater.toISOString(),\n          end: new Date(weekLater.getTime() + 60 * 60 * 1000).toISOString()\n        },\n        {\n          title: 'Annual Physical Exam',\n          description: 'Routine annual health checkup',\n          start: yearLater.toISOString(),\n          end: new Date(yearLater.getTime() + 60 * 60 * 1000).toISOString()\n        }\n      ];\n    }\n    \n    return [\n      {\n        title: 'Follow-up Meeting',\n        description: 'Check progress on discussed items',\n        start: weekLater.toISOString(),\n        end: new Date(weekLater.getTime() + 60 * 60 * 1000).toISOString()\n      },\n      {\n        title: 'Final Review',\n        description: 'Complete project review and next steps',\n        start: yearLater.toISOString(),\n        end: new Date(yearLater.getTime() + 60 * 60 * 1000).toISOString()\n      }\n    ];\n  }\n}\n\nexport function generateMermaidFlowchart(parentEvent: Event, followups: FollowupEvent[]): string {\n  const formatDate = (dateStr: string) => {\n    return new Date(dateStr).toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric', \n      year: 'numeric' \n    });\n  };\n\n  return `%%{init:{\n  \"theme\":\"base\",\n  \"themeCSS\": \".cluster rect{rx:12px!important;ry:12px!important;}.cluster.dateBox > rect{fill:#e8edf9;stroke:#4a6fa5;stroke-width:1.2px;}\",\n  \"securityLevel\":\"loose\"\n}}%%\nflowchart TD\n    %% styles\n    classDef dateBox fill:#e8edf9,stroke:#4a6fa5,stroke-width:1.2px\n    classDef eventBox fill:#ffffff,stroke:#d1d5db,stroke-width:1px,color:#374151\n\n    %% diagram\n    subgraph D1 [\"${formatDate(parentEvent.start)}\"]\n        EV0(\"${parentEvent.title}\")\n    end\n    class D1 dateBox\n\n    subgraph D2 [\"${formatDate(followups[0].start)}\"]\n        EV1(\"${followups[0].title}\")\n    end\n    class D2 dateBox\n\n    subgraph D3 [\"${formatDate(followups[1].start)}\"]\n        EV2(\"${followups[1].title}\")\n    end\n    class D3 dateBox\n\n    class EV0,EV1,EV2 eventBox\n\n    D1 --> D2\n    D2 --> D3\n\n    %% ISO dates for reference\n    %% ISO_DATE_1: ${parentEvent.start}\n    %% ISO_DATE_2: ${followups[0].start}\n    %% ISO_DATE_3: ${followups[1].start}\n\n    %% click handlers on event nodes\n    click EV0 \"javascript:window.gotoDateWithTitle('${parentEvent.start}','${parentEvent.title}')\"\n    click EV1 \"javascript:window.gotoDateWithTitle('${followups[0].start}','${followups[0].title}')\"\n    click EV2 \"javascript:window.gotoDateWithTitle('${followups[1].start}','${followups[1].title}')\"\n`;\n}\n", "import { Hono } from 'hono';\nimport { DatabaseService } from '../services/database-service';\nimport { createErrorResponse, createSuccessResponse } from '../middleware/error-handler';\nimport { generateFollowupEvents, generateMermaidFlowchart } from '../services/ai-service';\n\nexport const echoRouter = new Hono();\n\n// POST /api/events/:id/echo\nechoRouter.post('/api/events/:id/echo', async (c) => {\n  try {\n    const eventId = c.req.param('id');\n    const { user_id } = await c.req.json();\n    \n    console.log('Echo request received for event:', eventId, 'user:', user_id);\n    \n    if (!eventId || !user_id) {\n      return createErrorResponse(c, 'Missing required parameters', 400);\n    }\n\n    const dbService = new DatabaseService(c.env.DB);\n    \n    // Get the parent event\n    const parentEvent = await dbService.getEventById(eventId);\n    console.log('Parent event found:', parentEvent);\n    \n    if (!parentEvent) {\n      return createErrorResponse(c, 'Event not found', 404);\n    }\n\n    // Generate follow-ups using AI\n    console.log('Generating followup events...');\n    const followups = await generateFollowupEvents(parentEvent, c.env.OPENAI_API_KEY);\n    console.log('Followups generated:', followups);\n    \n    // Generate Mermaid flowchart\n    console.log('Generating Mermaid flowchart...');\n    const mermaidCode = generateMermaidFlowchart(parentEvent, followups);\n    console.log('Mermaid code generated:', mermaidCode);\n    \n    // Create follow-up events\n    console.log('Creating echo events in database...');\n    const createdEvents = await dbService.createEchoEvents(parentEvent, followups, mermaidCode, user_id);\n    console.log('Echo events created:', createdEvents);\n\n    // Update parent event with flowchart and echo event IDs\n    const echoIds = createdEvents.map(e => e.id);\n    await dbService.updateEventFlowchart(eventId, mermaidCode, echoIds);\n    console.log('Parent event updated with flowchart');\n\n    return createSuccessResponse(c, {\n      mermaid: mermaidCode,\n      events: createdEvents\n    }, 201);\n  } catch (error) {\n    console.error('Error creating echo:', error);\n    return createErrorResponse(c, 'Failed to create echo');\n  }\n});\n\n// POST /api/events/:id/echo/reset\nechoRouter.post('/api/events/:id/echo/reset', async (c) => {\n  try {\n    const eventId = c.req.param('id');\n    const { user_id } = await c.req.json();\n    \n    const dbService = new DatabaseService(c.env.DB);\n    await dbService.resetEchoEvents(eventId);\n    \n    return createSuccessResponse(c, { message: 'Echo reset successfully' });\n  } catch (error) {\n    console.error('Error resetting echo:', error);\n    return createErrorResponse(c, 'Failed to reset echo');\n  }\n});\n", "interface WeatherData {\n  location: string;\n  forecast: {\n    daily: {\n      temperature_2m_max: number[];\n      temperature_2m_min: number[];\n      precipitation_probability_max: number[];\n      windspeed_10m_max: number[];\n      weathercode: number[];\n      sunrise: string[];\n      sunset: string[];\n      time: string[];\n    };\n    current_weather: {\n      temperature: number;\n      weathercode: number;\n      is_day: number;\n    };\n  };\n}\n\ninterface WeatherResponse {\n  data: WeatherData;\n  status: string;\n}\n\nexport class WeatherService {\n  private apiKey: string;\n  private baseUrl = 'https://api.open-meteo.com/v1';\n  private geocodingUrl = 'https://geocoding-api.open-meteo.com/v1';\n\n  constructor(apiKey?: string) {\n    this.apiKey = apiKey || '';\n  }\n\n  async getWeatherData(location: string): Promise<WeatherData | null> {\n    try {\n      // First geocode the location\n      const coordinates = await this.geocodeLocation(location);\n      if (!coordinates) {\n        console.warn(`Could not geocode location: ${location}`);\n        // Return mock data instead of null to prevent 500 errors\n        return this.getMockWeatherData(location);\n      }\n\n      // Fetch weather data\n      const weatherUrl = `${this.baseUrl}/forecast?latitude=${coordinates.lat}&longitude=${coordinates.lon}&daily=temperature_2m_max,temperature_2m_min,precipitation_probability_max,windspeed_10m_max,weathercode,sunrise,sunset&current_weather=true&timezone=auto&temperature_unit=fahrenheit`;\n      \n      const response = await fetch(weatherUrl);\n      if (!response.ok) {\n        console.warn(`Weather API error: ${response.status}, falling back to mock data`);\n        return this.getMockWeatherData(location);\n      }\n\n      const data = await response.json();\n      \n      // Validate the response data\n      if (!data || !data.daily || !data.current_weather) {\n        console.warn('Invalid weather data received, falling back to mock data');\n        return this.getMockWeatherData(location);\n      }\n      \n      return data;\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      // Return mock data instead of null to prevent 500 errors\n      return this.getMockWeatherData(location);\n    }\n  }\n\n  private async geocodeLocation(location: string): Promise<{ lat: number; lon: number } | null> {\n    try {\n      const url = `${this.geocodingUrl}/search?name=${encodeURIComponent(location)}&count=1&language=en&format=json`;\n      const response = await fetch(url);\n      \n      if (!response.ok) {\n        console.warn(`Geocoding API error: ${response.status}`);\n        return null;\n      }\n\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        const result = data.results[0];\n        return {\n          lat: result.latitude,\n          lon: result.longitude\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error geocoding location:', error);\n      return null;\n    }\n  }\n\n  // Mock weather data to prevent 500 errors\n  private getMockWeatherData(location: string): WeatherData {\n    const now = new Date();\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const dayAfter = new Date(now);\n    dayAfter.setDate(dayAfter.getDate() + 2);\n    \n    return {\n      location: location,\n      forecast: {\n        daily: {\n          temperature_2m_max: [72, 68, 75],\n          temperature_2m_min: [55, 52, 58],\n          precipitation_probability_max: [10, 60, 5],\n          windspeed_10m_max: [8, 12, 6],\n          weathercode: [0, 61, 1],\n          sunrise: ['06:30', '06:32', '06:34'],\n          sunset: ['19:45', '19:43', '19:41'],\n          time: [\n            now.toISOString().split('T')[0],\n            tomorrow.toISOString().split('T')[0],\n            dayAfter.toISOString().split('T')[0]\n          ]\n        },\n        current_weather: {\n          temperature: 70,\n          weathercode: 0,\n          is_day: 1\n        }\n      }\n    };\n  }\n\n  getWeatherColor(weatherData: WeatherData): { color: string; opacity: number } {\n    if (!weatherData) {\n      return { color: '#000000', opacity: 1 }; // Default black\n    }\n\n    const { forecast, current_weather } = weatherData;\n    const now = new Date();\n    \n    // Check if it's dark (night time)\n    const todayIndex = 0; // First day in forecast\n    const sunriseStr = forecast.daily.sunrise[todayIndex];\n    const sunsetStr = forecast.daily.sunset[todayIndex];\n    \n    if (sunriseStr && sunsetStr) {\n      const sunrise = new Date(sunriseStr);\n      const sunset = new Date(sunsetStr);\n      \n      if (now < sunrise || now >= sunset) {\n        return { color: '#000000', opacity: 1 }; // Black for night\n      }\n    } else if (current_weather.is_day === 0) {\n      return { color: '#000000', opacity: 1 }; // Black for night (fallback)\n    }\n\n    // Daytime: determine weather quality\n    const weatherCode = current_weather.weathercode;\n    const isBadWeather = this.isDimWeather(weatherCode);\n    \n    if (isBadWeather) {\n      return { color: '#9ca3af', opacity: 0.9 }; // Gray for bad weather\n    } else {\n      return { color: '#fde047', opacity: 1 }; // Yellow for sunny weather\n    }\n  }\n\n  private isDimWeather(weatherCode: number): boolean {\n    // Weather codes that indicate dim/bad weather\n    const dimWeatherCodes = [\n      1, 2, 3,        // Cloudy\n      45, 48,         // Fog\n      51, 53, 55, 56, 57,  // Drizzle\n      61, 63, 65, 66, 67,  // Rain\n      71, 73, 75, 77,      // Snow\n      80, 81, 82,          // Rain showers\n      85, 86,              // Snow showers\n      95, 96, 99           // Thunderstorms\n    ];\n    \n    return dimWeatherCodes.includes(weatherCode);\n  }\n\n  getWeatherDescription(weatherCode: number): string {\n    const descriptions: { [key: number]: string } = {\n      0: 'Clear sky',\n      1: 'Mainly clear',\n      2: 'Partly cloudy',\n      3: 'Overcast',\n      45: 'Foggy',\n      48: 'Depositing rime fog',\n      51: 'Light drizzle',\n      53: 'Moderate drizzle',\n      55: 'Dense drizzle',\n      56: 'Light freezing drizzle',\n      57: 'Dense freezing drizzle',\n      61: 'Slight rain',\n      63: 'Moderate rain',\n      65: 'Heavy rain',\n      66: 'Light freezing rain',\n      67: 'Heavy freezing rain',\n      71: 'Slight snow',\n      73: 'Moderate snow',\n      75: 'Heavy snow',\n      77: 'Snow grains',\n      80: 'Slight rain showers',\n      81: 'Moderate rain showers',\n      82: 'Violent rain showers',\n      85: 'Slight snow showers',\n      86: 'Heavy snow showers',\n      95: 'Thunderstorm',\n      96: 'Thunderstorm with slight hail',\n      99: 'Thunderstorm with heavy hail'\n    };\n    \n    return descriptions[weatherCode] || 'Unknown';\n  }\n}\n", "import { Hono } from 'hono';\nimport { WeatherService } from '../services/weather-service';\nimport { createErrorResponse, createSuccessResponse } from '../middleware/error-handler';\n\nexport const weatherRouter = new Hono();\n\n// GET /api/weather\nweatherRouter.get('/api/weather', async (c) => {\n  try {\n    const { location = 'New York' } = c.req.query();\n    \n    const weatherService = new WeatherService();\n    const weatherData = await weatherService.getWeatherData(location);\n    \n    if (!weatherData) {\n      return createErrorResponse(c, 'Failed to fetch weather data');\n    }\n\n    return createSuccessResponse(c, { \n      data: weatherData,\n      status: 'success'\n    });\n  } catch (error) {\n    console.error('Error fetching weather:', error);\n    return createErrorResponse(c, 'Failed to fetch weather data');\n  }\n});\n\n// POST /api/weather/location\nweatherRouter.post('/api/weather/location', async (c) => {\n  try {\n    const { location } = await c.req.json();\n    \n    if (!location) {\n      return createErrorResponse(c, 'Location is required', 400);\n    }\n\n    const weatherService = new WeatherService();\n    const weatherData = await weatherService.getWeatherData(location);\n    \n    if (!weatherData) {\n      return createErrorResponse(c, 'Failed to fetch weather data for location');\n    }\n\n    return createSuccessResponse(c, { \n      message: `Weather location updated to ${location}`,\n      location: location,\n      status: 'success'\n    });\n  } catch (error) {\n    console.error('Error updating weather location:', error);\n    return createErrorResponse(c, 'Failed to update weather location');\n  }\n});\n\n// POST /api/weather/refresh\nweatherRouter.post('/api/weather/refresh', async (c) => {\n  try {\n    // This endpoint can be used to manually refresh weather data\n    // For now, it just returns a success message\n    return createSuccessResponse(c, { \n      message: 'Weather data refreshed successfully',\n      status: 'success'\n    });\n  } catch (error) {\n    console.error('Error refreshing weather:', error);\n    return createErrorResponse(c, 'Failed to refresh weather data');\n  }\n});\n", "import { Hono } from 'hono';\nimport { DatabaseService } from '../services/database-service';\nimport { createErrorResponse } from '../middleware/error-handler';\nimport { formatDateForICS, escapeICSField } from '../utils/helpers';\n\nexport const icsRouter = new Hono();\n\n// GET /api/ics/:user\nicsRouter.get('/api/ics/:user', async (c) => {\n  try {\n    const userId = c.req.param('user');\n    \n    if (!userId) {\n      return createErrorResponse(c, 'User ID is required', 400);\n    }\n\n    const dbService = new DatabaseService(c.env.DB);\n    const events = await dbService.getUserEvents(userId);\n\n    if (events.length === 0) {\n      return createErrorResponse(c, 'No events found for user', 404);\n    }\n\n    // Generate ICS content\n    let icsContent = 'BEGIN:VCALENDAR\\r\\n';\n    icsContent += 'VERSION:2.0\\r\\n';\n    icsContent += 'PRODID:-//Calendar Worker//EN\\r\\n';\n    icsContent += 'CALSCALE:GREGORIAN\\r\\n';\n    icsContent += 'METHOD:PUBLISH\\r\\n';\n\n    for (const event of events) {\n      icsContent += 'BEGIN:VEVENT\\r\\n';\n      icsContent += `UID:${event.id}\\r\\n`;\n      icsContent += `DTSTAMP:${formatDateForICS(new Date().toISOString())}Z\\r\\n`;\n      icsContent += `DTSTART;TZID=${event.tz}:${formatDateForICS(event.start)}\\r\\n`;\n      icsContent += `DTEND;TZID=${event.tz}:${formatDateForICS(event.end)}\\r\\n`;\n      icsContent += `SUMMARY:${escapeICSField(event.title)}\\r\\n`;\n      if (event.description) {\n        icsContent += `DESCRIPTION:${escapeICSField(event.description)}\\r\\n`;\n      }\n      icsContent += `END:VEVENT\\r\\n`;\n    }\n\n    icsContent += 'END:VCALENDAR\\r\\n';\n\n    return new Response(icsContent, {\n      headers: {\n        'Content-Type': 'text/calendar; charset=utf-8',\n        'Content-Disposition': `attachment; filename=\"calendar-${userId}.ics\"`,\n      },\n    });\n  } catch (error) {\n    console.error('Error generating ICS:', error);\n    return createErrorResponse(c, 'Failed to generate ICS');\n  }\n});\n", "import { Hono } from 'hono';\nimport { DatabaseService } from '../services/database-service';\nimport { createErrorResponse, createSuccessResponse } from '../middleware/error-handler';\nimport { CALENDAR_ID } from '../utils/constants';\n\nexport const seedRouter = new Hono();\n\n// GET /api/seed\nseedRouter.get('/api/seed', async (c) => {\n  try {\n    const userId = c.env.USER_ID || 'demo-user';\n    \n    const dbService = new DatabaseService(c.env.DB);\n    await dbService.seedDemoData(userId, CALENDAR_ID);\n\n    return createSuccessResponse(c, { message: 'Demo data seeded successfully' });\n  } catch (error) {\n    console.error('Error seeding demo data:', error);\n    return createErrorResponse(c, 'Failed to seed demo data');\n  }\n});\n", "export class AssetService {\n  constructor(private assets: any) {}\n\n  async serveAsset(path: string): Promise<Response> {\n    try {\n      // Skip API routes\n      if (path.startsWith('/api/')) {\n        throw new Error('API route requested');\n      }\n      \n      // Ensure path is properly formatted\n      const assetPath = path.startsWith('/') ? path : `/${path}`;\n      \n      const response = await this.assets.fetch(assetPath);\n      \n      if (response.status === 404) {\n        // If file not found, serve index.html for SPA routing\n        return this.serveIndexHtml();\n      }\n      \n      // Add cache-busting headers for JavaScript and CSS files\n      if (path.endsWith('.js') || path.endsWith('.css')) {\n        return this.addCacheHeaders(response);\n      }\n      \n      return response;\n    } catch (error) {\n      console.error('Error serving asset:', path, error);\n      // If any error, try to serve index.html as fallback\n      return this.serveIndexHtml();\n    }\n  }\n\n  private async serveIndexHtml(): Promise<Response> {\n    try {\n      const response = await this.assets.fetch('/index.html');\n      if (response.status === 404) {\n        throw new Error('index.html not found in assets');\n      }\n      return this.addCacheHeaders(response);\n    } catch (error) {\n      console.error('Error serving index.html:', error);\n      throw error;\n    }\n  }\n\n  private addCacheHeaders(response: Response): Response {\n    const newResponse = new Response(response.body, response);\n    newResponse.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\n    newResponse.headers.set('Pragma', 'no-cache');\n    newResponse.headers.set('Expires', '0');\n    return newResponse;\n  }\n}\n", "import { Hono } from 'hono';\nimport { corsMiddleware } from './middleware/cors';\nimport { errorHandler } from './middleware/error-handler';\nimport { eventsRouter } from './routes/events';\nimport { echoRouter } from './routes/echo';\nimport { weatherRouter } from './routes/weather';\nimport { icsRouter } from './routes/ics';\nimport { seedRouter } from './routes/seed';\nimport { AssetService } from './services/asset-service';\nimport { Env } from './types';\n\nconst app = new Hono<{ Bindings: Env }>();\n\n// Middleware\napp.use('*', corsMiddleware);\napp.use('*', errorHandler);\n\n// API Routes\napp.route('/', eventsRouter);\napp.route('/', echoRouter);\napp.route('/', weatherRouter);\napp.route('/', icsRouter);\napp.route('/', seedRouter);\n\n// Static asset handler - must be last to catch all non-API routes\napp.get('*', async (c) => {\n  try {\n    // Validate the request URL\n    if (!c.req.url) {\n      console.error('No request URL provided');\n      return c.notFound();\n    }\n\n    // Validate ASSETS binding\n    if (!c.env.ASSETS) {\n      console.error('ASSETS binding not available');\n      return c.notFound();\n    }\n\n    const url = new URL(c.req.url);\n    const path = url.pathname;\n    \n    // Skip API routes\n    if (path.startsWith('/api/')) {\n      return c.notFound();\n    }\n    \n    const assetService = new AssetService(c.env.ASSETS);\n    return await assetService.serveAsset(path);\n  } catch (error) {\n    console.error('Error in static asset handler:', error);\n    return c.notFound();\n  }\n});\n\nexport default app;\n"],
  "mappings": "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",
  "names": ["options", "__accessCheck", "__privateGet", "__privateAdd", "__privateSet", "raw", "__accessCheck", "__privateGet", "__privateAdd", "__privateSet", "app", "Node", "Node", "Hono", "errorHandler", "Hono", "Hono", "Hono", "Hono", "Hono", "Hono", "errorHandler"]
}
